<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- appender是配置输出终端，ConsoleAppender是控制台,name是自定义名 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 配置日志格式，这是一个比较通用的格式 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--FileAppender的作用是将日志写到文件中-->
    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <!-- <file>表示写入的文件名，可以使相对目录也可以是绝对目录，如果上级目录不存在则自动创建 -->
        <file>D:/log/123.log</file>
        <!--<appender>如果为true表示日志被追加到文件结尾，如果是false表示清空文件-->
        <append>true</append>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 输出终端是滚动文件 -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间滚动，就是每天的日志输出到不同的文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 输出日志的目录文件名，window中默认分区为当前程序的硬盘分区，%d{yyyy-MM-dd}是当前日期 -->
            <fileNamePattern>D:/log/warn/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 最大保存99个文件，超出的历史文件会被删除 -->
            <maxHistory>99</maxHistory>
        </rollingPolicy>
        <!-- 按照日志级别进行过滤 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只收集WARN级别的日志，其他高级别和低级别的日志都放弃 -->
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 除了filter，其他 配置和上面一样， 只是name和文件路径不同-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>D:/log/error/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>99</maxHistory>
        </rollingPolicy>
        <!-- 阈值过滤器 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 收集ERROR及ERROR以上级别的日志 -->
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>


    <!--采取异步写日志的方式而不让此次写日志发生磁盘IO，阻塞线程从而造成不必要的性能损耗-->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- root是根日志打印器，只有一个，负责整个系统的日志输出  -->
    <root level="INFO">
        <!-- 将上面三个输出终端配置到根打印器，将对整个系统 生效。 -->
        <appender-ref ref="STDOUT" />
        <appender-ref ref="ASYNC" />
        <appender-ref ref="ERROR" />
        <appender-ref ref="WARN" />
    </root>


</configuration>